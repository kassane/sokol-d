name: D

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-24.04-arm, ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v4
      - uses: mlugg/setup-zig@v1
        # with:
        #   version: master
      - uses: dlang-community/setup-dlang@v2
        with:
          compiler: ldc-master

      - name: prepare-linux
        if: runner.os == 'Linux'
        run: |
            sudo apt-get update
            sudo apt-get install libglu1-mesa-dev mesa-common-dev xorg-dev libasound-dev

      - name: (Dub) Build Native
        if: runner.os != 'Windows'
        run: |
            dub build :clear
            dub build :sgl_context
            dub build :sgl_points
            dub build :debugtext
            dub build :cube
            dub build :texcube
            dub build :blend
            dub build :triangle
            dub build :instancing
            dub build :instancingcompute
            dub build :mrt
            dub build :noninterleaved
            dub build :quad
            dub build :offscreen
            dub build :bufferoffsets
            dub build :user_data
            dub build :vertexpull
            dub build :shapes
            dub build :imgui
            dub build :droptest

      - name: (Zig) Build Shaders
        run: zig build -Dshaders
      - name: (Zig) Running Test
        if: runner.os != 'Windows'
        run: zig build test -DzigCC
      - name: (Zig) Build Native
        run: zig build -Dimgui -DzigCC --summary all
      - name: (Zig + emsdk) Build Wasm
        run: zig build -Dimgui -DzigCC --summary all -Dtarget=wasm32-emscripten-none -Dcpu=generic
