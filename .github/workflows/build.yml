name: D

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-24.04-arm, ubuntu-latest, macos-latest, windows-latest]
        compiler: [ldc-master, dmd-master]
        exclude:
          - runs-on: ubuntu-24.04-arm
            compiler: dmd-master
          - runs-on: macos-latest
            compiler: dmd-master
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v4
      - uses: egor-tensin/vs-shell@v2
        with:
          arch: x64
      - uses: dlang-community/setup-dlang@v2
        with:
          compiler: ${{ matrix.compiler }}

      - name: prepare-linux
        if: runner.os == 'Linux'
        run: |
            sudo apt-get update
            sudo apt-get install libglu1-mesa-dev mesa-common-dev xorg-dev libasound-dev

      - name: (dub) Running shdc
        run: dub build -c genshaders -v
      # - name: (dub) Build sokol-static (default)
      #   run: dub build -v
      # - name: (dub) Build imgui-static
      #   run: dub build -c imgui-static -v
      # - name: (dub) Build sokol-shared
      #   run: dub build -c sokol-shared -v      
      # - name: (dub) Build imgui-shared
      #   run: dub build -c imgui-shared -v
      - name: (dub) Build sokol examples
        working-directory: examples
        run: |
          dub build :blend -f
          dub build :bufferoffsets
          dub build :clear
          dub build :cube
          dub build :debugtext
          dub build :droptest
          dub build :imgui
          dub build :instancing
          dub build :instancingcompute
          dub build :mrt
          dub build :noninterleaved
          dub build :offscreen
          dub build :quad
          dub build :shapes
          dub build :saudio
          dub build :sglcontext
          dub build :sglpoints
          dub build :triangle
          dub build :texcube
          dub build :userdata
          dub build :vertexpull

  build-wasm:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-24.04-arm, ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v4
      - uses: dlang-community/setup-dlang@v2
        with:
          compiler: ldc-master
      # - name: (dub) Build sokol+imgui-wgles3
      #   run: dub build -c imgui-wgles3 -v --arch wasm32-unknown-emscripten-wasm
      # - name: (dub) Build sokol+imgui-wgpu
      #   run: dub build -c imgui-wgpu -v --arch wasm32-unknown-emscripten-wasm
      # - name: (dub) Build sokol-wgpu
      #   run: dub build -c sokol-wgpu -v --arch wasm32-unknown-emscripten-wasm
      # - name: (dub) Build sokol-wgles3
      #   run: dub build -c sokol-wgles3 -v --arch wasm32-unknown-emscripten-wasm
      - name: (dub) Build sokol examples
        working-directory: examples
        run: |
          dub build :blend -f -c wasm -v --arch wasm32-unknown-emscripten-wasm
          dub build :bufferoffsets -c wasm -v --arch wasm32-unknown-emscripten-wasm
          dub build :clear -c wasm -v --arch wasm32-unknown-emscripten-wasm
          dub build :cube -c wasm -v --arch wasm32-unknown-emscripten-wasm
          dub build :debugtext -c wasm -v --arch wasm32-unknown-emscripten-wasm
          dub build :droptest -c wasm -v --arch wasm32-unknown-emscripten-wasm
          dub build :imgui -c wasm -v --arch wasm32-unknown-emscripten-wasm
          dub build :instancing -c wasm -v --arch wasm32-unknown-emscripten-wasm
          dub build :instancingcompute -c wasm -v --arch wasm32-unknown-emscripten-wasm
          dub build :mrt -c wasm -v --arch wasm32-unknown-emscripten-wasm
          dub build :noninterleaved -c wasm -v --arch wasm32-unknown-emscripten-wasm
          dub build :offscreen -c wasm -v --arch wasm32-unknown-emscripten-wasm
          dub build :quad -c wasm -v --arch wasm32-unknown-emscripten-wasm
          dub build :shapes -c wasm -v --arch wasm32-unknown-emscripten-wasm
          dub build :saudio -c wasm -v --arch wasm32-unknown-emscripten-wasm
          dub build :sglcontext -c wasm -v --arch wasm32-unknown-emscripten-wasm
          dub build :sglpoints -c wasm -v --arch wasm32-unknown-emscripten-wasm
          dub build :triangle -c wasm -v --arch wasm32-unknown-emscripten-wasm
          dub build :texcube -c wasm -v --arch wasm32-unknown-emscripten-wasm
          dub build :userdata -c wasm -v --arch wasm32-unknown-emscripten-wasm
          dub build :vertexpull -c wasm -v --arch wasm32-unknown-emscripten-wasm

  gdc-15:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest]
    runs-on: ${{ matrix.runs-on }}
    container:
      image: archlinux:latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: prepare-linux
        run: |
            pacman -Syu --noconfirm
            pacman -S --noconfirm glu mesa xorg alsa-lib gcc gdc dub      
      - name: (dub) Build sokol examples
        working-directory: examples
        run: |
          dub build :blend -f
          dub build :bufferoffsets
          dub build :clear
          dub build :cube
          dub build :debugtext
          dub build :instancing
          dub build :instancingcompute
          dub build :mrt
          dub build :noninterleaved
          dub build :offscreen
          dub build :quad
          dub build :shapes
          dub build :saudio
          dub build :sglcontext
          dub build :sglpoints
          dub build :triangle
          dub build :texcube
          dub build :userdata
          dub build :vertexpull
